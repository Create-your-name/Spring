Redis  是一种 数据库   是在内存之中
	NoSql   不仅仅 是 sql   也解释为 非关系型 数据库   NoSQL  数据库中 数据是无联系的   无关系的  数据的结构是松散的 可变的
	         比传统的 数据库 多一些功能      
	         毕竟 还多一些特点     1.  访问量大     2.高并发     3.  因为要稳定的 面对 互联网用户  所以 （高可用）  4. 海量数据、
	
	关系数据库  更加 是面向与 内部的    处理  已知的一部分数据   数据量不大	面对 互联网用户  无法满足要求   性能差   
	非关系数据库  是面向互联网端的  	
	
	关系数据库的 瓶颈： 
		1.无法面对 高并发的 读写请求
		2、  存储记录的数量有限  读取数据的 时间性能有限   这种架构 难以维护
		3.无法 简单的通过 提高硬件来 提高性能       不能有质的飞越
		4. 关系数据库  大多是 收费的  对硬件的要求较高
	非关系数据库  NOSQL 就是未来 解决 关系数据库的 瓶颈和弱势
		优势： 
		       1.高性能高并发
		       2.灵活的数据模型  ：  Nosql 数据库  建表时 不需要定义行  列    数据之间没有关系  
		      3、在系统出现故障的时候  可以快速的反应
		       4.成本低
		劣势：
		      1. 没关系   数据之间是 无联系的
		      2。不支持标准的SQL
		      3. 没有关系数据库的约束（数据域）  大多数没有索引的概念
		      4.没有事务  不能依靠事务 实现ACID
		      5. 没有丰富的数据类型 （数值，日期，字符，二进制）
	
Redis   是当今非常流行的  基于KV 结构的 作为 Cache 使用的NoSQL 数据库
	KV 结构 ： MAP 结构   key -value     
	常用来作为 缓存功能 
		在关系数据库 中  是 进行 VIEW ->  Service ->  Dao -> DB
		在 Redis        中  是 进行 VIEW - > Service -> Redis   //  将数据库中的数据 缓存 进Redis 
	作为缓存来 进行 使用     在 Service 需要数据时  可以在 缓存（Redis ） 中寻找需要的数据     减少对 数据库的访问   直接在 Cache 中 取出数据  不需要访问数据库  在内存方面 使用数据
		减轻对数据库的 查询压力
	
	基于内存的  可持久化的 Key -Value 数据库     value 类型 可以是 字符串   哈希MAP  列表  list   集合 sets  有序集合  sorted sets 
	